<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ishansong.diablo.admin.mapper.ServiceUpstreamMapper">

    <resultMap id="BaseResultMap" type="com.ishansong.diablo.admin.entity.ServiceUpstreamDO">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="date_created" jdbcType="TIMESTAMP" property="dateCreated"/>
        <result column="date_updated" jdbcType="TIMESTAMP" property="dateUpdated"/>
        <result column="host_name" jdbcType="VARCHAR" property="hostName"/>
        <result column="env" jdbcType="VARCHAR" property="env"/>
        <result column="host_ip" jdbcType="VARCHAR" property="hostIp"/>
        <result column="service_info_id" jdbcType="VARCHAR" property="serviceInfoId"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, date_created, date_updated, host_name,env,host_ip,service_info_id
    </sql>

    <select id="selectById" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from service_upstream_host
        where id = #{id,jdbcType=VARCHAR}
    </select>


    <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from service_upstream_host
        where host_name = #{hostName,jdbcType=VARCHAR}
    </select>

    <select id="selectByQuery" parameterType="com.ishansong.diablo.admin.query.ServiceUpstreamQuery" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from service_upstream_host where 1=1
        <if test="hostIp != null">
            and host_ip = #{hostIp,jdbcType=VARCHAR}
        </if>

        <if test="env != null">
            and env = #{env,jdbcType=VARCHAR}
        </if>

        <if test="serviceInfoId != null">
            and service_info_id = #{serviceInfoId,jdbcType=VARCHAR}
        </if>

        order by env

        <if test="pageParameter != null">
            limit #{pageParameter.offset},#{pageParameter.pageSize}
        </if>

    </select>

    <select id="selectIpsByServiceInfoId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from service_upstream_host
        where service_info_id = #{serviceInfoId,jdbcType=VARCHAR}
    </select>

    <select id="selectByServiceInfoIds" resultType="com.ishansong.diablo.admin.entity.ServiceUpstreamDO">
        select service_info_id as serviceInfoId, host_ip as hostIp, host_name as hostName
        from service_upstream_host
        where service_info_id in
        <foreach collection="serviceInfoIds" item="serviceInfoId" open="(" close=")" separator=",">
            #{serviceInfoId,jdbcType=VARCHAR}
        </foreach>
    </select>

    <select id="countByQuery" parameterType="com.ishansong.diablo.admin.query.ServiceUpstreamQuery"
            resultType="java.lang.Integer">
        select count(1)
        from service_upstream_host
        <if test="hostName != null">
            where host_name = #{hostName,jdbcType=VARCHAR}
        </if>
    </select>
    <select id="selectAll" resultType="com.ishansong.diablo.admin.entity.ServiceUpstreamDO" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from service_upstream_host
    </select>

    <insert id="insert" parameterType="com.ishansong.diablo.admin.entity.ServiceUpstreamDO">
        insert into service_upstream_host (id, date_created, date_updated,
        host_name,env,host_ip,service_info_id)
        values (#{id,jdbcType=VARCHAR}, #{dateCreated,jdbcType=TIMESTAMP}, #{dateUpdated,jdbcType=TIMESTAMP},
        #{hostName,jdbcType=VARCHAR},#{env,jdbcType=VARCHAR}, #{hostIp,jdbcType=VARCHAR},
        #{serviceInfoId,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.ishansong.diablo.admin.entity.ServiceUpstreamDO">
        insert into service_upstream_host
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            <if test="dateCreated != null">
                date_created,
            </if>
            <if test="dateUpdated != null">
                date_updated,
            </if>
            <if test="hostName != null">
                host_name,
            </if>
            <if test="env != null">
                env,
            </if>
            <if test="hostIp != null">
                host_ip,
            </if>
            <if test="serviceInfoId != null">
                service_info_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{id,jdbcType=VARCHAR},
            <if test="dateCreated != null">
                #{dateCreated,jdbcType=TIMESTAMP},
            </if>
            <if test="dateUpdated != null">
                #{dateUpdated,jdbcType=TIMESTAMP},
            </if>
            <if test="hostName != null">
                #{hostName,jdbcType=VARCHAR},
            </if>
            <if test="env != null">
                #{env,jdbcType=VARCHAR},
            </if>
            <if test="hostIp != null">
                #{hostIp,jdbcType=VARCHAR},
            </if>
            <if test="serviceInfoId != null">
                #{serviceInfoId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="com.ishansong.diablo.admin.entity.ServiceUpstreamDO">
        update service_upstream_host
        set date_updated = #{dateUpdated,jdbcType=TIMESTAMP},
        host_name = #{hostName,jdbcType=VARCHAR},
        env = #{env,jdbcType=VARCHAR},
        host_ip = #{hostIp,jdbcType=VARCHAR}
        service_info_id = #{serviceInfoId,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="updateSelective" parameterType="com.ishansong.diablo.admin.entity.ServiceUpstreamDO">
        update service_upstream_host
        <set>
            <if test="dateCreated != null">
                date_created = #{dateCreated,jdbcType=TIMESTAMP},
            </if>
            <if test="dateUpdated != null">
                date_updated = #{dateUpdated,jdbcType=TIMESTAMP},
            </if>
            <if test="hostName != null">
                host_name = #{hostName,jdbcType=VARCHAR},
            </if>
            <if test="hostIp != null">
                host_ip = #{hostIp,jdbcType=VARCHAR},
            </if>
            <if test="env != null">
                env=#{env,jdbcType=VARCHAR},
            </if>
            <if test="serviceInfoId != null">
                service_info_id=#{serviceInfoId,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <delete id="delete" parameterType="java.lang.String">
        delete from service_upstream_host
        where id = #{id,jdbcType=VARCHAR}
    </delete>

</mapper>